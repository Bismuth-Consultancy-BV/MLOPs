# Dialog script for mlops::sd_scheduler::1.0 automatically generated

{
    name	mlops::sd_scheduler::1.0
    script	mlops::sd_tokenizer::1.0
    label	"MLOPs SD Scheduler"

    help {
	""
    }

    inputlabel	1	"Text Embeddings"
    inputlabel	2	"Noise Latents"
    inputlabel	3	"Image Latents"
    inputlabel	4	Mask
    outputlabel	1	"Scheduler Latents"

    groupsimple {
        name    "folder0"
        label   "Model"

        parm {
            name    "cache_only"
            label   "Local Cache"
            type    toggle
            joinnext
            default { "1" }
            parmtag { "script_callback_language" "python" }
        }
        parm {
            name    "model"
            label   "Scheduler Model"
            type    string
            default { "$MLOPS_MODEL" }
            menureplace {
                [ "import mlops_utils" ]
                [ "return mlops_utils.return_downloaded_checkpoints()" ]
                language python
            }
            parmtag { "script_callback_language" "python" }
        }
    }

    groupsimple {
        name    "folder1"
        label   "Settings"

        parm {
            name    "device"
            label   "Compute Device"
            type    ordinal
            default { "0" }
            menu {
                "cuda"  "cuda"
                "cpu"   "cpu"
                "mps"   "mps"
            }
            parmtag { "script_callback_language" "python" }
        }
        parm {
            name    "scheduler"
            label   "Scheduler"
            type    ordinal
            default { "0" }
            menu {
                [ "from sdpipeline import schedulers_lookup" ]
                [ "" ]
                [ "keys = list(schedulers_lookup.schedulers.keys())" ]
                [ "labels = []" ]
                [ "" ]
                [ "for key in keys:" ]
                [ "    labels.append(key)" ]
                [ "    labels.append(\" \".join([x.upper() for x in key.split(\"_\")]))" ]
                [ "return labels" ]
                language python
            }
            parmtag { "script_callback_language" "python" }
        }
        parm {
            name    "inference_steps"
            label   "Num Inference Steps"
            type    integer
            default { "20" }
            range   { 1 100 }
            parmtag { "script_callback_language" "python" }
        }
        parm {
            name    "cfg_scale"
            label   "CFG Scale"
            type    float
            default { "7.5" }
            range   { 0 10 }
            parmtag { "script_callback_language" "python" }
        }
        parm {
            name    "guidance_strength"
            label   "Image Guidance Strength"
            type    float
            default { "0.8" }
            range   { 0 1 }
            parmtag { "script_callback_language" "python" }
        }
        parm {
            name    "sepparm"
            label   "Spacer"
            type    separator
            default { "" }
            parmtag { "sidefx::layout_height" "medium" }
            parmtag { "sidefx::look" "blank" }
        }
        parm {
            name    "seamless"
            label   "Seamless Generation"
            type    toggle
            default { "0" }
            parmtag { "script_callback_language" "python" }
        }
    }

}
